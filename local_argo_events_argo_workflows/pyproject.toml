[tool.black]
line-length = 127
exclude = '''
(
    .eggs|.git|.hg|.mypy_cache|.nox|.tox|.venv|.svn|.pyi|_build|buck-out|build|dist
    | .eggs|.git|.hg|.mypy_cache|.nox|.tox|.venv|.svn|_build|buck-out|build|dist
)
'''

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = [
    "tests/*",
    ".local/*",
    "local-infra/*",
    "infra"
]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "mypy-scripts.*"
disallow_untyped_defs = false

[tool.ruff]
target-version = "py311"
line-length = 127  # same as black
indent-width = 4

lint.select = [
    "B",  # flake8-bugbear
    "E",  # pycodestyle error
    "F",  # pyflakes
    "I",  # isort
    "UP",  # pyupgrade
    "W",  # pycodestyle warning
]
lint.ignore-init-module-imports = true
exclude = [
    "*/__init__.py",
    ".tox",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "*.pyi",
    ".venv/*",
    ".local/*",
    "local-infra/*",
]

[tool.ruff.lint.pydocstyle]
# for pydocstyle
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10

[tool.poetry]
name = "local-argo-events-argo-workflows"
version = "0.1.0"
description = ""
authors = ["hosimesi <hosimesi11@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"


[tool.poetry.group.app.dependencies]
pandas = "^2.2.1"
google-cloud-storage = "^2.16.0"
scikit-learn = "^1.4.1.post1"
lightgbm = "^4.3.0"
pydantic = "^2.6.4"


[tool.poetry.group.dev.dependencies]
taskipy = "^1.12.2"
tox = "^4.12.1"
pytest = "^8.0.0"
ruff = "^0.2.0"
black = "^24.1.1"
mypy = "^1.8.0"


[tool.taskipy.tasks]
update_dev = { cmd = "poetry export --without-hashes --with dev --output requirements/dev.txt", help = "update dev requirements" }
update_app = { cmd = "poetry export --without-hashes --with app --output requirements/app.txt", help = "update app requirements" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
